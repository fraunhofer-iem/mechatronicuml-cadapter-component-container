[comment encoding = UTF-8 /]
[module main('http://www.muml.org/psm/muml_container/0.5.0', 
	'http://www.muml.org/pm/hardware/hwresourceinstance/1.0.0',
	'http://www.muml.org/core/1.0.0')/]

[import org::muml::arduino::adapter::container::main::MainFile /]
[import org::muml::arduino::adapter::container::container::ECUIdentifier /]
[import org::muml::arduino::adapter::container::container::ContainerHeader/]
[import org::muml::arduino::adapter::container::container::Container /]

[**
 * Generate the Arduino container code for each ECU contained in the given @param deploymentConfig.
 * 
 * Only applicable to DeploymentConfigurations that make use of MQTT and I2C only.
*/]
[template public generateArduinoContainers(deploymentConfig : DeploymentConfiguration)]
[comment @main/]

[if (deploymentConfig.ecuConfigurations.componentContainers.componentInstanceConfigurations.portInstanceConfigurations->exists(piConifg | piConifg.oclIsKindOf(PortInstanceConfiguration_DDS)))]
	[file ('info.txt', false, 'UTF-8')]
The given Deployment Configuration must not make use of DDS for the Arduino Code generation!
Currently, only MQTT and I2C are supported.
	[/file]
[else] [comment Else, only MQTT and I2C are used -> start the actual code generation /]
[for (ecuConfig : ECUConfiguration | deploymentConfig.ecuConfigurations)]
	[ecuConfig.createArduinoContainers() /]
[/for]
[/if]


[/template]


[**
 * Generate the containers for one single ECU given as @param ecuConfig.
*/]
[template private createArduinoContainers(ecuConfig: ECUConfiguration)
	{
		path : String = ecuConfig.structuredResourceInstance.name+'/' ;
		useSubDirectories : Boolean = false;
	}
]
	[ecuConfig.generateMainFile(path, useSubDirectories)/]
	[ecuConfig.generateECUIdentifier(useSubDirectories, path) /]
	[for (container : ComponentContainer | ecuConfig.componentContainers)]
		[container.generateContainerHeader(path, useSubDirectories) /]
		[container.generateContainer(useSubDirectories, path) /]
	[/for]
[/template]
